{
  "version": 3,
  "file": "vars.js",
  "sources": [
    "../node_modules/almond/almond.js",
    "helpers/assert.js",
    "helpers/assertType.js",
    "functions/debounce.js",
    "functions/inherit.js",
    "functions/noop.js",
    "functions.js",
    "math/clamp.js",
    "math/isClamped.js",
    "math/isEven.js",
    "math/isOdd.js",
    "math.js",
    "objects/noval.js",
    "objects/keyOfValue.js",
    "objects/length.js",
    "objects.js",
    "vars.js"
  ],
  "names": [],
  "mappingsjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA,ADmCA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA,AD0DA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('helpers/assert',[],function() {\n  /**\n   * Asserts the specified condition and throws a warning if assertion fails.\n   *\n   * @param {Boolean} condition          Condition to validate against.\n   * @param {String}  message:undefined  Message to be displayed when assertion\n   *                                     fails.\n   *\n   * @return {Boolean} True if assert passed, false otherwise.\n   */\n  function assert(condition, message) {\n    if (!condition) {\n      throw new Error((message || 'Assert failed'));\n    }\n\n    return condition;\n  }\n\n  return assert;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('helpers/assertType',[\n  'helpers/assert'\n],\nfunction(\n  assert\n) {\n  /**\n   * Asserts the specified condition and throws a warning if assertion fails.\n   * Internal use only.\n   *\n   * @param {*}            value                 Value used for the assertion.\n   * @param {String/Class} type                  Type(s) to evaluate against.\n   *                                             If this is a string, this\n   *                                             method will use 'typeof'\n   *                                             operator. Otherwise\n   *                                             'instanceof' operator will be\n   *                                             used. If this parameter is an\n   *                                             array, all elements in the\n   *                                             array will be evaluated\n   *                                             against.\n   * @param {Boolean}      allowUndefined:false  Specifies whether assertion\n   *                                             should pass if the supplied\n   *                                             value is undefined.\n   * @param {String}       message:undefined     Message to be displayed when\n   *                                             assertion fails.\n   *\n   * @return {Boolean} True if assert passed, false otherwise.\n   */\n  function assertType(value, type, allowUndefined, message) {\n    if (!assert(type !== undefined, 'Paremeter \\'type\\' must be a string or a class')) return;\n    if (!assert((allowUndefined === undefined) || (typeof allowUndefined === 'boolean'), 'Paremeter \\'allowUndefined\\', if specified, must be a boolean')) return;\n    if (!assert((message === undefined) || (typeof message === 'string'), 'Parameter \\'message\\', if specified, must be a string')) return;\n\n    allowUndefined = (allowUndefined === undefined) ? false : allowUndefined;\n\n    var ok = false;\n\n    if (allowUndefined && (value === undefined)) {\n      ok = true;\n    }\n    else if (type instanceof Array) {\n      var n = type.length;\n\n      for (var i = 0; i < n; i++) {\n        if (checkType(value, type[i])) {\n          ok = true;\n          break;\n        }\n      }\n    }\n    else {\n      ok = checkType(value, type);\n    }\n\n    if (!ok) {\n      throw new Error(message || 'AssertType failed');\n    }\n\n    return ok;\n  }\n\n  /**\n   * Verifies that a given is of the given type.\n   *\n   * @param {*} value  Any value.\n   * @param {*} type   Any class or string that describes a type.\n   *\n   * @return {Boolean} True if validation passes, false otherwise.\n   */\n  function checkType(value, type) {\n    if (typeof type === 'string') {\n      switch (type) {\n        case 'string':\n        case 'object':\n        case 'number':\n        case 'boolean':\n        case 'function':\n          return typeof value === type;\n\n        case 'class':\n          return typeof value === 'function';\n\n        case 'array':\n          return value instanceof Array;\n\n        default:\n          return false;\n      }\n    }\n    else {\n      return value instanceof type;\n    }\n  }\n\n  return assertType;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('functions/debounce',[\n  'helpers/assertType'\n],\nfunction(\n  assertType\n) {\n  /**\n   * Returns a function that, as long as it continues to be invoked, will not\n   * be triggered. The function will be called after it stops being called for\n   * N milliseconds. If 'leading' is passed, the function will be triggered on\n   * the leading edge instead of the trailing.\n   *\n   * @param {Function} method         Method to be debounced.\n   * @param {Number}   delay:0        Debounce rate in milliseconds.\n   * @param {Boolean}  leading:false  Indicates whether the method is triggered\n   *                                  on the leading edge instead of the\n   *                                  trailing.\n   *\n   * @return {Function} The debounced method.\n   */\n  function debounce(method, delay, leading) {\n    assertType(method, 'function', false, 'Invalid parameter: method');\n    assertType(delay, 'number', true, 'Invalid optional parameter: delay');\n    assertType(leading, 'boolean', true, 'Invalid optional parameter: leading');\n\n    if (delay === undefined) delay = 0;\n    if (leading === undefined) leading = false;\n\n    var timeout;\n\n    return function() {\n      var context = this;\n      var args = arguments;\n\n      var later = function() {\n        timeout = null;\n\n        if (!leading) {\n          method.apply(context, args);\n        }\n      };\n\n      var callNow = leading && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, delay);\n\n      if (callNow) {\n        method.apply(context, args);\n      }\n    };\n  }\n\n  return debounce;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('functions/inherit',[\n  'helpers/assertType'\n],\nfunction(\n  assertType\n) {\n  /**\n   * Sets up prototypal inheritance between a child class and a parent class.\n   *\n   * @param {Class} childClass   Child class\n   * @param {Class} parentClass  Parent class\n   *\n   * @return {Class} Extended child class.\n   */\n  function inherit(childClass, parentClass) {\n    assertType(childClass, 'class', false, 'Invalid parameter: childClass');\n    assertType(parentClass, 'class', false, 'Invalid parameter: parentClass');\n\n    for (var key in parentClass) {\n      if (parentClass.hasOwnProperty(key)) {\n        childClass[key] = parentClass[key];\n      }\n    }\n\n    function C() {\n      this.constructor = childClass;\n    }\n\n    C.prototype = Object.create(parentClass.prototype);\n    childClass.prototype = new C();\n    childClass.__super__ = parentClass.prototype;\n    return childClass;\n  }\n\n  return inherit;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('functions/noop',[],function() {\n  /**\n   * This method does absolutely nothing.\n   */\n  function noop() {}\n\n  return noop;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Module of methods for manipulating functions.\n *\n * @type {Module}\n */\n\n'use strict';\n\ndefine('functions', [\n  'functions/debounce',\n  'functions/inherit',\n  'functions/noop'\n], function(\n  debounce,\n  inherit,\n  noop\n) {\n  var api = {};\n\n  Object.defineProperty(api, 'debounce', { value: debounce, writable: false, enumerable: true });\n  Object.defineProperty(api, 'inherit', { value: inherit, writable: false, enumerable: true });\n  Object.defineProperty(api, 'noop', { value: noop, writable: false, enumerable: true });\n\n  return api;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('math/clamp',[\n  'helpers/assertType'\n], function(\n  assertType\n) {\n  /**\n   * Clamps a value to a min and max value.\n   *\n   * @param {Number} value\n   * @param {Number} min\n   * @param {Number} max\n   *\n   * @return {Number} The clamped value.\n   */\n  function clamp(value, min, max) {\n    assertType(value, 'number', false, 'Invalid value specified');\n    assertType(min, 'number', false, 'Invalid min value specified');\n    assertType(max, 'number', false, 'Invalid max value specified');\n\n    var output = value;\n\n    output = Math.min(output, max);\n    output = Math.max(output, min);\n\n    return output;\n  }\n\n  return clamp;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('math/isClamped',[\n  'helpers/assertType'\n], function(\n  assertType\n) {\n  /**\n   * Determines if value is bounded by the specified min and max values,\n   * defaults to inclusive.\n   *\n   * @param {Number}  value\n   * @param {Number}  min\n   * @param {Number}  max\n   * @param {Boolean} exclusive:false\n   *\n   * @return {Boolean} True if bounded, false otherwise.\n   */\n  function isClamped(value, min, max, exclusive) {\n    assertType(value, 'number', false, 'Invalid value specified');\n    assertType(min, 'number', false, 'Invalid min value specified');\n    assertType(max, 'number', false, 'Invalid max value specified');\n    assertType(exclusive, 'boolean', true, 'Invalid parameter: exclusive');\n\n    if (exclusive === undefined) exclusive = false;\n\n    if (exclusive) {\n      return ((value > min) && (value < max));\n    }\n    else {\n      return ((value >= min) && (value <= max));\n    }\n  }\n\n  return isClamped;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('math/isEven',[\n  'helpers/assertType'\n], function(\n  assertType\n) {\n  /**\n   * Determines if a number is an even number. Zero is considered even by\n   * default.\n   *\n   * @param {Number}  value\n   * @param {Boolean} excludeZero:false\n   *\n   * @return {Boolean} True if number is even, false otherwise.\n   */\n  function isEven(value, excludeZero) {\n    assertType(value, 'number', false, 'Invalid value specified');\n    assertType(excludeZero, 'boolean', true, 'Invalid parameter: excludeZero');\n\n    if (excludeZero === undefined) excludeZero = false;\n\n    if (value === 0) return (!excludeZero);\n\n    return (value % 2) === 0;\n  }\n\n  return isEven;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('math/isOdd',[\n  'helpers/assertType'\n], function(\n  assertType\n) {\n  /**\n   * Determines if a number is an odd number.\n   *\n   * @param {Number} value\n   *\n   * @return {Boolean} True if number is odd, false otherwise.\n   */\n  function isOdd(value) {\n    assertType(value, 'number', false, 'Invalid value specified');\n\n    if (value === 0) return false;\n\n    return (value % 2) !== 0;\n  }\n\n  return isOdd;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Module of methods/classes related to math.\n *\n * @type {Module}\n */\n\n'use strict';\n\ndefine('math', [\n  'math/clamp',\n  'math/isClamped',\n  'math/isEven',\n  'math/isOdd'\n], function(\n  clamp,\n  isClamped,\n  isEven,\n  isOdd\n) {\n  var api = {};\n\n  Object.defineProperty(api, 'clamp', { value: clamp, writable: false, enumerable: true });\n  Object.defineProperty(api, 'isClamped', { value: isClamped, writable: false, enumerable: true });\n  Object.defineProperty(api, 'isEven', { value: isEven, writable: false, enumerable: true });\n  Object.defineProperty(api, 'isOdd', { value: isOdd, writable: false, enumerable: true });\n\n  return api;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('objects/noval',[\n  'helpers/assert',\n  'helpers/assertType'\n],\nfunction(\n  assert,\n  assertType\n) {\n  /**\n   * Checks if a given value is equal to null. Option to specify recursion,\n   * which would further evaluate inner elements, such as when an Array or\n   * Object is specified.\n   *\n   * @param {*}       value            Value to evaluate.\n   * @param {Boolean} recursive:false  Specifies whether to recursively\n   *                                   evaluate the supplied value's inner\n   *                                   values (i.e. an Array or Object).\n   *\n   * @return {Boolean} True if null, false otherwise.\n   */\n  function noval(value, recursive) {\n    assertType(recursive, 'boolean', true, 'Invalid parameter: recursive');\n\n    if (recursive === undefined) recursive = false;\n\n    if (value === undefined || value === null) {\n      return true;\n    }\n    else if (recursive && (value instanceof Array)) {\n      var n = value.length;\n\n      for (var i = 0; i < n; i++) {\n        if (!noval(value[i], true)) return false;\n      }\n\n      return true;\n    }\n    else if (recursive && (typeof value === 'object')) {\n      for (var p in value) {\n        if (!noval(value[p], true)) return false;\n      }\n\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  return noval;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('objects/keyOfValue',[\n], function(\n) {\n  /**\n   * Gets the key of a given value in a given object.\n   *\n   * @param {Object} object  Target object.\n   * @param {Value}  value   Target value.\n   */\n  function keyOfValue(object, value) {\n    if (!object || !value) return null;\n    if (typeof object !== 'object') return null;\n\n    for (var property in object) {\n      if (object.hasOwnProperty(property)) {\n        if (object[property] === value) {\n          return property;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  return keyOfValue;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @type {Function}\n */\n\n'use strict';\n\ndefine('objects/length',[],function() {\n  /**\n   * Gets the number of keys in a given object.\n   *\n   * @param {*} object  Any object type.\n   *\n   * @return {Number} Size of specified object (depending on the object type,\n   *                  it can be the number of keys in a plain object, number\n   *                  of elements in an array, number of characters in a\n   *                  string, number of digits in a number, and 0 for all\n   *                  other types.\n   */\n  function length(object) {\n    if (object === undefined || object === null) return 0;\n\n    // If object internally has length property, use it.\n    if (object.length !== undefined) return object.length;\n\n    var size = 0;\n\n    switch (typeof object) {\n      case 'object': {\n        if (object !== null && object !== undefined) {\n          for (var k in object) size++;\n        }\n\n        break;\n      }\n\n      case 'number': {\n        size = ('' + object).length;\n        break;\n      }\n\n      default: {\n        size = 0;\n        break;\n      }\n    }\n\n    return size;\n  }\n\n  return length;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Module of methods for manipulating objects.\n *\n * @type {Module}\n */\n\n'use strict';\n\ndefine('objects', [\n  'objects/noval',\n  'objects/keyOfValue',\n  'objects/length'\n], function(\n  noval,\n  keyOfValue,\n  length\n) {\n  var api = {};\n\n  Object.defineProperty(api, 'noval', { value: noval, writable: false, enumerable: true });\n  Object.defineProperty(api, 'keyOfValue', { value: keyOfValue, writable: false, enumerable: true });\n  Object.defineProperty(api, 'length', { value: length, writable: false, enumerable: true });\n\n  return api;\n});\n\n",
    "/**\n * VARS\n * (c) VARIANTE (http://variante.io)\n *\n * This software is released under the MIT License:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Construction of the VARS API.\n */\n\n'use strict';\n\ndefine('vars', [\n  'functions',\n  'math',\n  'objects'\n], function(\n  functions,\n  math,\n  objects\n) {\n  var vars = {};\n\n  Object.defineProperty(vars, 'name', { value: 'VARS', writable: false });\n  Object.defineProperty(vars, 'version', { value: '0.1.0', writable: false });\n\n  injectModule('functions', functions);\n  injectModule('math', math);\n  injectModule('objects', objects);\n\n  /**\n   * @private\n   *\n   * Injects a module and all of its sub-modules into the core VARS module.\n   *\n   * @param {String} name    Name of the module (used as the key for the\n   *                         key-value pair in VARS).\n   * @param {Object} module  Module object (used as value for the key-value\n   *                         pair in VARS).\n   */\n  function injectModule(name, module) {\n    Object.defineProperty(vars, name, {\n      value: module,\n      writable: false\n    });\n\n    for (var key in module) {\n      if (module.hasOwnProperty(key)) {\n        Object.defineProperty(vars, key, {\n          value: module[key],\n          writable: false\n        });\n      }\n    }\n  }\n\n  return vars;\n});\n\n"
  ]
}